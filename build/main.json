{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1318.3566",
      "templateHash": "7723236651270395007"
    }
  },
  "parameters": {
    "clientSecret": {
      "type": "secureString"
    },
    "workspaceKey": {
      "type": "secureString"
    },
    "appName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "tenantId": {
      "type": "string"
    },
    "clientId": {
      "type": "string"
    },
    "WorkspaceId": {
      "type": "string"
    }
  },
  "variables": {
    "storageAccountName": "[format('{0}{1}', substring(parameters('appName'), 0, 10), uniqueString(resourceGroup().id))]",
    "hostingPlanName": "[format('{0}{1}', parameters('appName'), uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('{0}{1}', parameters('appName'), uniqueString(resourceGroup().id))]",
    "keyVaultName": "[format('{0}{1}', substring(parameters('appName'), 0, 10), uniqueString(resourceGroup().id))]",
    "functionAppName": "[parameters('appName')]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-10-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'clientSecret')]",
      "properties": {
        "value": "[parameters('clientSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-10-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'workspaceKey')]",
      "properties": {
        "value": "[parameters('workspaceKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "tags": {
        "[format('hidden-link:/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/sites/{2}', subscription().id, resourceGroup().name, variables('functionAppName'))]": "Resource"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-10-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2021-10-01",
      "name": "[format('{0}/add', variables('keyVaultName'))]",
      "properties": {
        "accessPolicies": [
          {
            "objectId": "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            },
            "tenantId": "[subscription().tenantId]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'functionDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "functionDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceKey": {
            "reference": {
              "keyVault": {
                "id": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
              },
              "secretName": "workspaceKey"
            }
          },
          "WorkspaceId": {
            "value": "[parameters('WorkspaceId')]"
          },
          "clientId": {
            "value": "[parameters('clientId')]"
          },
          "clientSecret": {
            "reference": {
              "keyVault": {
                "id": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
              },
              "secretName": "clientSecret"
            }
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          },
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          },
          "appInsightsKey": {
            "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
          },
          "hostingPlanId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
          },
          "objStrAccount": {
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01', 'full')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "10971764471096339391"
            }
          },
          "parameters": {
            "clientSecret": {
              "type": "secureString"
            },
            "workspaceKey": {
              "type": "secureString"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tenantId": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "WorkspaceId": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            },
            "appInsightsKey": {
              "type": "string"
            },
            "hostingPlanId": {
              "type": "string"
            },
            "objStrAccount": {
              "type": "secureObject"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "kind": "functionapp",
              "properties": {
                "httpsOnly": true,
                "serverFarmId": "[parameters('hostingPlanId')]",
                "clientAffinityEnabled": true,
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "clientSecret",
                      "value": "[parameters('clientSecret')]"
                    },
                    {
                      "name": "workspaceKey",
                      "value": "[parameters('workspaceKey')]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsKey')]"
                    },
                    {
                      "name": "tenantId",
                      "value": "[parameters('tenantId')]"
                    },
                    {
                      "name": "WorkspaceId",
                      "value": "[parameters('WorkspaceId')]"
                    },
                    {
                      "name": "clientId",
                      "value": "[parameters('clientId')]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('objStrAccount').name, environment().suffixes.storage, listKeys(parameters('objStrAccount').id, parameters('objStrAccount').apiVersion).keys[0].value)]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~3"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "powershell"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('objStrAccount').name, environment().suffixes.storage, listKeys(parameters('objStrAccount').id, parameters('objStrAccount').apiVersion).keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "https://github.com/kenrward/PullAdvLogs2Sentinel/blob/master/PullAdvLogs2Sentinel.zip?raw=true"
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ]
}